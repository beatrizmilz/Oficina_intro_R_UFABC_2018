# Importar a tabela para o R
imp_2018 <- read_csv2("dados/imp_2018-10-02_01-05.csv")
?read.csv2
library(dplyr)
library(utils)
# Importar a tabela para o R
imp_2018 <- read_csv2("dados/imp_2018-10-02_01-05.csv")
library(dplyr)
library(readr)
# Importar a tabela para o R
imp_2018 <- read_csv2("dados/imp_2018-10-02_01-05.csv")
# Importar a tabela para o R
imp_2018 <- read_csv2("dados/imp_2018-10-02_01-05.csv")
# Importar a tabela para o R
imp_2018 <- read_csv2("dados/imp_2018-10-02_01-05.csv")
# Importar a tabela para o R
dados_seade_imp <- read_csv2("dados/imp_2018-11-18_00-43.csv")
# Importar a tabela para o R
dados_seade_imp <- read_csv2("dados/imp_2018-11-18_00-43.csv")
# Importar a tabela para o R
dados_seade_imp <- read.csv("dados/imp_2018-11-18_00-43.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
View(dados_seade_imp)
# Importar a tabela para o R
dados_seade_imp <- read.csv2("dados/imp_2018-11-18_00-43.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
View(dados_seade_imp)
# Importar a tabela para o R
dados_seade_imp <- read.csv2("dados/imp_2018-11-18_00-43.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
View(dados_seade_imp)
summary(dados_seade_imp)
#Renomear as colunas
names(imp_2018) <- c("municipio", "ano", "populacao", "populacao_masculina", "populacao_feminina", "razao_de_sexos", "populacao_urbana", "populacao_rural", "grau_urbanizacao_porcentagem", "codigo_ibge")
#Renomear as colunas
names(dados_seade_imp) <- c("municipio", "ano", "populacao", "populacao_masculina", "populacao_feminina", "razao_de_sexos", "populacao_urbana", "populacao_rural", "grau_urbanizacao_porcentagem", "codigo_ibge")
View(dados_seade_imp)
summary(dados_seade_imp)
# Importar a tabela para o R
mmp_emplasa <- readxl::read_xlsx("dados/delimitacaoterritorialMMP_Emplasa.xlsx")
View(mmp_emplasa)
# Renomear as colunas para padronizar os nomes
names(mmp_emplasa) <- c("municipio","codigo_ibge")
View(mmp_emplasa)
# Padronizar e deixar o código do IBGE configurado como número
mmp_emplasa$codigo_ibge <- as.integer(mmp_emplasa$codigo_ibge)
#Juntar os dados de divisão administrativa baseados nos municípios
#contidos na tabela da Emplasa
mmp_emplasa <- left_join(mmp_emplasa, divisao_adm, by="codigo_ibge")
library(dplyr)
library(readr)
library(dplyr)
library(readr)
library(readxl)
#Carregar a tabela de divisão administrativa
divisao_adm <- readxl::read_xlsx("dados/divisao_adm.xlsx")
View(divisao_adm)
#Renomear as colunas
names(divisao_adm) <- c("codigo_ibge", "municipio", "regiao_administrativa", "regiao_de_governo", "regiao_metropolitana", "aglomeracoes_urbanas", "rm_au")
#Transformar a coluna do código IBGE em número
divisao_adm$codigo_ibge <- as.integer(divisao_adm$codigo_ibge)
#Renomear as colunas
names(divisao_adm) <- c("codigo_ibge", "municipio", "regiao_administrativa", "regiao_de_governo", "regiao_metropolitana", "aglomeracoes_urbanas", "rm_au")
summary(divisao_adm)
#Carregar a tabela de divisão administrativa
divisao_adm <- readxl::read_xlsx("dados/divisao_adm.xlsx")
View(divisao_adm)
#Renomear as colunas
names(divisao_adm) <- c("codigo_ibge", "municipio", "regiao_administrativa", "regiao_de_governo", "regiao_metropolitana", "aglomeracoes_urbanas", "rm_au")
summary(divisao_adm)
#Transformar a coluna do código IBGE em número
divisao_adm$codigo_ibge <- as.integer(divisao_adm$codigo_ibge)
summary(divisao_adm)
# Importar a tabela para o R
mmp_emplasa <- readxl::read_xlsx("dados/delimitacaoterritorialMMP_Emplasa.xlsx")
View(divisao_adm)
# Renomear as colunas para padronizar os nomes
names(mmp_emplasa) <- c("municipio","codigo_ibge")
# Renomear as colunas para padronizar os nomes
names(mmp_emplasa) <- c("municipio","codigo_ibge")
summary(mmp_emplasa)
# Padronizar e deixar o código do IBGE configurado como número
mmp_emplasa$codigo_ibge <- as.integer(mmp_emplasa$codigo_ibge)
#Juntar os dados de divisão administrativa baseados nos municípios
#contidos na tabela da Emplasa
mmp_emplasa <- left_join(mmp_emplasa, divisao_adm, by="codigo_ibge")
#Juntar os dados de divisão administrativa baseados nos municípios
#contidos na tabela da Emplasa
mmp_emplasa <- left_join(mmp_emplasa, divisao_adm, by="codigo_ibge")
View(mmp_emplasa)
#Juntar os dados de divisão administrativa baseados nos municípios
#contidos na tabela da Emplasa
mmp_emplasa <- left_join(mmp_emplasa, divisao_adm, by="codigo_ibge")
library(dplyr)
library(readr)
library(readxl)
#Carregar a tabela de divisão administrativa
divisao_adm <- readxl::read_xlsx("dados/divisao_adm.xlsx")
View(divisao_adm)
#Renomear as colunas
names(divisao_adm) <- c("codigo_ibge", "municipio", "regiao_administrativa", "regiao_de_governo", "regiao_metropolitana", "aglomeracoes_urbanas", "rm_au")
summary(divisao_adm)
#Transformar a coluna do código IBGE em número
divisao_adm$codigo_ibge <- as.integer(divisao_adm$codigo_ibge)
summary(divisao_adm)
# Importar a tabela para o R
mmp_emplasa <- readxl::read_xlsx("dados/delimitacaoterritorialMMP_Emplasa.xlsx")
# Renomear as colunas para padronizar os nomes
names(mmp_emplasa) <- c("municipio","codigo_ibge")
summary(mmp_emplasa)
# Padronizar e deixar o código do IBGE configurado como número
mmp_emplasa$codigo_ibge <- as.integer(mmp_emplasa$codigo_ibge)
#Juntar os dados de divisão administrativa baseados nos municípios
#contidos na tabela da Emplasa
mmp_emplasa2 <- left_join(mmp_emplasa, divisao_adm, by="codigo_ibge")
View(mmp_emplasa2)
# Deletar a coluna que fica repetida
mmp_emplasa2$municipio.y <- NULL
# Importar a tabela para o R
dados_seade_imp <- read.csv2("dados/imp_2018-11-18_00-43.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
View(dados_seade_imp)
#Renomear as colunas
names(dados_seade_imp) <- c("municipio", "ano", "populacao", "populacao_masculina", "populacao_feminina", "razao_de_sexos", "populacao_urbana", "populacao_rural", "grau_urbanizacao_porcentagem", "codigo_ibge")
View(dados_seade_imp)
summary(dados_seade_imp)
# Cria a tabela e faz o left join baseado no código IBGE
imp_2018_mmp_emplasa <- left_join(mmp_emplasa2, imp_2018, by="codigo_ibge")
# Importar a tabela para o R
seade_imp <- read.csv2("dados/imp_2018-11-18_00-43.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
View(seade_imp)
#Renomear as colunas
names(seade_imp) <- c("municipio", "ano", "populacao", "populacao_masculina", "populacao_feminina", "razao_de_sexos", "populacao_urbana", "populacao_rural", "grau_urbanizacao_porcentagem", "codigo_ibge")
View(seade_imp)
summary(seade_imp)
# Cria a tabela e faz o left join baseado no código IBGE
seade_mmp_emplasa <- left_join(mmp_emplasa2, seade_imp, by="codigo_ibge")
# A coluna de município está repetida, então apago uma delas.
seade_mmp_emplasa$municipio.y <- NULL
head(seade_mmp_emplasa)
View(seade_imp)
write_csv(seade_mmp_emplasa,path = "dados/seade_mmp_emplasa.csv")
knitr::opts_chunk$set(echo = TRUE)
read_csv("dados/seade_mmp_emplasa.csv")
seade_mmp_emplasa <- read_csv("dados/seade_mmp_emplasa.csv")
View(seade_mmp_emplasa)
pop_mmp <- imp_2018_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao))
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao))
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao))
seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao))
seade_mmp_emplasa %>%
group_by(ano) %>%
filter(ano == "2018")
seade_mmp_emplasa %>%
group_by(ano) %>%
filter(ano == "2018") %>%
summarise(PopulacaoTotal = sum(populacao))
seade_mmp_emplasa %>%
group_by(ano) %>%
filter(ano == "2018") %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)
filter(ano == "2018") %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000) %>%  #transformar em milhões
round(PopulacaoTotal, digits = 2)
seade_mmp_emplasa %>%
group_by(ano) %>%
filter(ano == "2018") %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000) %>%  #transformar em milhões
round(PopulacaoTotal, digits = 2)
pop_mmp_2018 <- seade_mmp_emplasa %>%
group_by(ano) %>%
filter(ano == "2018") %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
View(pop_mmp_2018)
seade_mmp_emplasa %>%
group_by(ano) %>%
#filter(ano == "2018") %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)
pop_mmp<- seade_mmp_emplasa %>%
group_by(ano) %>%
#filter(ano == "2018") %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
pop_mmp<- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
View(pop_mmp)
#Ler o arquivo csv criado:
seade_mmp_emplasa <- read_csv("dados/seade_mmp_emplasa.csv")
#Ler o arquivo csv criado:
seade_mmp_emplasa <- read_csv("dados/seade_mmp_emplasa.csv")
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao))
pop_mmp<- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
library(dplyr)
library(magrittr)
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao))
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
imp_2018_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana"
)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
#Ler o arquivo csv criado:
seade_mmp_emplasa <- read_csv("dados/seade_mmp_emplasa.csv")
library(dplyr)
library(magrittr)
library(readr)
#Ler o arquivo csv criado:
seade_mmp_emplasa <- read_csv("dados/seade_mmp_emplasa.csv")
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
pop_mmp
pop_mmp[5,2]
pop_mmp
pop_mmp[5,2]
library(dplyr)
library(magrittr)
library(readr)
library(ggplot2)
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
pop_mmp <- round(pop_mmp, 2)
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana"
)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
+theme_bw()
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana"
)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
theme_bw()
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana",
title = "População na Macrometrópole Paulista em 2018"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
mtcars %>% glimpse()
Summarize(mtcars)
summarize(mtcars)
summarize(mtcars)
summary(mtcars)
#Carregar a tabela de divisão administrativa
divisao_adm <- readxl::read_xlsx("dados/divisao_adm.xlsx")
summary(divisao_adm)
#Renomear as colunas
names(divisao_adm) <- c("codigo_ibge", "municipio", "regiao_administrativa", "regiao_de_governo", "regiao_metropolitana", "aglomeracoes_urbanas", "rm_au")
#Renomear as colunas
names(divisao_adm) <- c("codigo_ibge", "municipio", "regiao_administrativa", "regiao_de_governo", "regiao_metropolitana", "aglomeracoes_urbanas", "rm_au")
summary(divisao_adm)
#Carregar a tabela de divisão administrativa
divisao_adm <- readxl::read_xlsx("dados/divisao_adm.xlsx")
summary(divisao_adm)
```
seade_mmp_emplasa %>%
ggplot()+
geom_col(aes(x =rm_au, y = PopulacaoTotal))
library(tidyverse)
seade_mmp_emplasa %>%
ggplot()+
geom_col(aes(x =rm_au, y = PopulacaoTotal))
#Ler o arquivo csv criado:
seade_mmp_emplasa <- read_csv("dados/seade_mmp_emplasa.csv")
View(seade_mmp_emplasa)
pop_mmp <- seade_mmp_emplasa %>%
group_by(ano) %>%
summarise(PopulacaoTotal = sum(populacao)) %>%
mutate(PopulacaoTotal = PopulacaoTotal/1000000)  #transformar em milhões
pop_mmp <- round(pop_mmp, 2)
# Segundo os dados da SEADE, atualmente (em 2018) a MMP tem  `r pop_mmp[5,2]` milhões de habitantes.
seade_mmp_emplasa %>%
ggplot()+
geom_col(aes(x =rm_au, y = PopulacaoTotal))
View(seade_mmp_emplasa)
seade_mmp_emplasa %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
seade_mmp_emplasa %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
summary(seade_mmp_emplasa)
names(seade_mmp_emplasa)
seade_mmp_emplasa %>%
filter(ano =="2018") %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
```
seade_mmp_emplasa %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
```
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
seade_mmp_emplasa %>%
filter(ano =="2018") %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana",
title = "População na Macrometrópole Paulista em 2018"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
# group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana",
title = "População na Macrometrópole Paulista em 2018"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
# group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
#arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-populacao), y = populacao, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana",
title = "População na Macrometrópole Paulista em 2018"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
# group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
#arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder(rm_au, -populacao), y = populacao, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana",
title = "População na Macrometrópole Paulista em 2018"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
seade_mmp_emplasa %>%
filter(ano =="2018") %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
# group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(populacao)) %>%
ggplot()+
geom_col(aes(x = reorder(rm_au, -populacao), y = populacao, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana",
title = "População na Macrometrópole Paulista em 2018"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
seade_mmp_emplasa %>%
filter(ano =="2018") %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
ggplot()+
geom_col(aes(x =rm_au, y = populacao))
seade_mmp_emplasa %>%
mutate(populacao = populacao/1000000) %>%  #transformar em milhões
filter(ano =="2018") %>%
group_by(rm_au) %>% summarise(PopulacaoTotal = sum(populacao)) %>%
arrange (desc(PopulacaoTotal)) %>%
ggplot()+
geom_col(aes(x = reorder( rm_au ,-PopulacaoTotal), y = PopulacaoTotal, fill=rm_au))+
labs(
x = "Região Metropolitana/Aglomeração Urbana",
y = "População",
fill = "Região Metropolitana/Aglomeração Urbana",
title = "População na Macrometrópole Paulista em 2018"
)+
theme_bw()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
knitr::include_graphics("imagens/ggplot2.png")
View(pop_mmp)
View(pop_mmp)
View(seade_mmp_emplasa)
